#pragma once
#include <string>
#include <string_view>
#include <vector>
#include <tuple>
#include <array>
#include <unordered_map>
#include <type_traits>
#include <functional>
#include <algorithm>
#include <concepts>
#include <utility>
#include <sstream>
#include <regex>
#include <iterator>
#include <filesystem>
#include <future>
#include <memory>
#include <initializer_list>
#include <source_location>
#include <new>
#include <stdexcept>
#include <cstring>
#include <cstdint>
#include <cstddef>
#include <cmath>
#include <cstdlib>

#define field(FieldIdentifier, ...) std::decay_t<decltype(__VA_ARGS__)> FieldIdentifier = __VA_ARGS__
#define Forward(...) std::forward<decltype(__VA_ARGS__)>(__VA_ARGS__)

using namespace std::literals;

constexpr auto operator""_size(unsigned long long Value) {
	return static_cast<std::size_t>(Value);
}

constexpr auto operator""_ptrdiff(unsigned long long Value) {
	return static_cast<std::ptrdiff_t>(Value);
}

constexpr auto operator""_u64(unsigned long long Value) {
	return static_cast<std::uint64_t>(Value);
}

constexpr auto operator""_i64(unsigned long long Value) {
	return static_cast<std::int64_t>(Value);
}

constexpr auto operator""_u32(unsigned long long Value) {
	return static_cast<std::uint32_t>(Value);
}

constexpr auto operator""_i32(unsigned long long Value) {
	return static_cast<std::int32_t>(Value);
}